            
            float sdBox( vec2 p, vec2 b ) {
              vec2 q = abs(p) - b;
              return length(max(q,0.0)) + min(max(q.x,q.y),0.0);
            }
                        
            vec2 opRep( in vec2 p, in vec2 c ) {
                vec2 q = mod(p+0.5*c,c)-0.5*c;
                return q;
           }
                       
            vec2 opRepLim( in vec2 p, in float c, in vec2 l) {
                vec2 q = p-c*clamp(floor(p/c+0.5),-l,l); //round(p/c)
                return q;
            }
            vec3 floor_color(in vec2 p, float scale,vec3 color0, vec3 color1, vec3 color2) {
                vec3 a = (mod((floor(p.x)+floor(p.y)),2.0) == 0.0)?color0:color1;
                vec3 b = (fract(p.x)>scale && fract(p.y)>scale)?color0:color2;
                return a;
            }

            vec3 brickCol(vec2 localPos,vec3 BrickColor,vec3 MortarColor,vec2 BrickSize,vec2 BrickPct) {
                vec2 position=localPos/BrickSize;

                if(fract(position.y*0.5)>0.5){
                    //position.x+=0.5;
                }

                position=fract(position);
                vec2 useBrick=step(position,BrickPct);
                //vec2 useBrick=smoothstep(position,BrickPct,vec2(0.01));

                return mix(MortarColor,BrickColor,useBrick.x*useBrick.y);
            }      //+1.0/4.0
                vec2 p=tc-vec2(0.5);
                float cc=0.05+0.05+0.05*2.0;
                p=opRep(p,vec2(cc));
                //p=opRepLim( p, cc,  vec2(2.0));
                vec3 c=(sdBox( p, vec2(1.0/12.0) )<=0.0)?vec3(1.0):vec3(0.5);
                
                
              //  gl_FragColor = vec4(c,1.0); 
                //gl_FragColor = vec4(floor_color((tc/10.0), 0.05,vec3(0.9), vec3(0.8), vec3(1.0)),1.0); 
                //gl_FragColor = vec4(brickCol(tc,vec3(1.0),vec3(0.9),vec2(10.0),vec2(0.9)),1.0); 
                  //gl_FragColor = vec4(a, 1.0);